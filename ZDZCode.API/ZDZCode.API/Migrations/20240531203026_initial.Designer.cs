// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ZDZCode.API.Context;

#nullable disable

namespace ZDZCode.API.Migrations
{
    [DbContext(typeof(SystemDbContext))]
    [Migration("20240531203026_initial")]
    partial class initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ZDZCode.API.Entities.Hotel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImgsUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Hotels");

                    b.HasData(
                        new
                        {
                            Id = new Guid("b9f5a8b7-719c-4c25-bb6f-89fb34f63376"),
                            Description = "Desfrute de um oásis tropical no Sunset Paradise Resort. Com vistas deslumbrantes para o mar e praias de areia branca, este resort oferece a escapada perfeita para relaxamento e diversão.",
                            ImgsUrl = "[\"https://images.pexels.com/photos/189296/pexels-photo-189296.jpeg?auto=compress\\u0026cs=tinysrgb\\u0026w=600\",\"https://images.pexels.com/photos/258154/pexels-photo-258154.jpeg?auto=compress\\u0026cs=tinysrgb\\u0026w=600\"]",
                            Name = "Sunset Paradise Resort"
                        },
                        new
                        {
                            Id = new Guid("b50e3174-2aa7-465d-a5ca-45219d85e543"),
                            Description = "Entre na mística e explore a beleza natural do Mystic Mountain Lodge. Situado entre as majestosas montanhas, este lodge oferece uma experiência única em harmonia com a natureza.",
                            ImgsUrl = "[\"https://images.pexels.com/photos/338504/pexels-photo-338504.jpeg?auto=compress\\u0026cs=tinysrgb\\u0026w=600\",\"https://images.pexels.com/photos/2034335/pexels-photo-2034335.jpeg?auto=compress\\u0026cs=tinysrgb\\u0026w=600\"]",
                            Name = "Mystic Mountain Lodge"
                        },
                        new
                        {
                            Id = new Guid("8661a44d-78ec-495a-a204-1fa5cb69b1c6"),
                            Description = "Perca-se nos jardins eternos do Eternal Garden Retreat. Com sua atmosfera serena e paisagens exuberantes, este retiro é um refúgio para a alma em busca de paz e tranquilidade.",
                            ImgsUrl = "[\"https://images.pexels.com/photos/1134176/pexels-photo-1134176.jpeg?auto=compress\\u0026cs=tinysrgb\\u0026w=600\",\"https://images.pexels.com/photos/2096983/pexels-photo-2096983.jpeg?auto=compress\\u0026cs=tinysrgb\\u0026w=600\"]",
                            Name = "Eternal Garden Retreat"
                        },
                        new
                        {
                            Id = new Guid("a4b30340-ef8a-4209-916e-e1f9f7084c3b"),
                            Description = "Descubra o luxo e o conforto no Golden Sands Resort. Com praias douradas e instalações de primeira classe, este resort oferece uma experiência inesquecível para os viajantes exigentes.",
                            ImgsUrl = "[\"https://images.pexels.com/photos/594077/pexels-photo-594077.jpeg?auto=compress\\u0026cs=tinysrgb\\u0026w=600\",\"https://images.pexels.com/photos/1838554/pexels-photo-1838554.jpeg?auto=compress\\u0026cs=tinysrgb\\u0026w=600\"]",
                            Name = "Golden Sands Resort"
                        });
                });

            modelBuilder.Entity("ZDZCode.API.Entities.Person", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CPF")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("People");

                    b.HasData(
                        new
                        {
                            Id = new Guid("4957ed00-76f0-413c-bfdb-1313a2d7a60f"),
                            CPF = "123.456.789-00",
                            Email = "joao@example.com",
                            LastName = "Silva",
                            Name = "João",
                            Phone = "123456789"
                        },
                        new
                        {
                            Id = new Guid("165370e7-dddd-4caa-90e0-5945d919e814"),
                            CPF = "987.654.321-00",
                            Email = "maria@example.com",
                            LastName = "Santos",
                            Name = "Maria",
                            Phone = "987654321"
                        },
                        new
                        {
                            Id = new Guid("27bc7dd8-d17c-4078-a5e1-d981e6aa777f"),
                            CPF = "111.222.333-00",
                            Email = "carlos@example.com",
                            LastName = "Souza",
                            Name = "Carlos",
                            Phone = "111222333"
                        },
                        new
                        {
                            Id = new Guid("d17124d0-1c83-4618-aed9-a2c545ef23c1"),
                            CPF = "444.555.666-00",
                            Email = "ana@example.com",
                            LastName = "Oliveira",
                            Name = "Ana",
                            Phone = "444555666"
                        },
                        new
                        {
                            Id = new Guid("b747d5f3-2ad6-4ee6-a108-ec8619cb7edc"),
                            CPF = "777.888.999-00",
                            Email = "pedro@example.com",
                            LastName = "Rodrigues",
                            Name = "Pedro",
                            Phone = "777888999"
                        },
                        new
                        {
                            Id = new Guid("9292ef7a-97f1-4636-86a2-181b3701787c"),
                            CPF = "222.333.444-00",
                            Email = "laura@example.com",
                            LastName = "Costa",
                            Name = "Laura",
                            Phone = "222333444"
                        },
                        new
                        {
                            Id = new Guid("3fa773f2-cfcf-4ff6-b9f8-7b171e902499"),
                            CPF = "555.666.777-00",
                            Email = "fernando@example.com",
                            LastName = "Martins",
                            Name = "Fernando",
                            Phone = "555666777"
                        },
                        new
                        {
                            Id = new Guid("8cba7beb-e86f-4c1a-baa7-586c4d3ce102"),
                            CPF = "888.999.000-00",
                            Email = "mariana@example.com",
                            LastName = "Pereira",
                            Name = "Mariana",
                            Phone = "888999000"
                        },
                        new
                        {
                            Id = new Guid("59349c4d-6dab-43d3-a061-ed8491434616"),
                            CPF = "999.000.111-00",
                            Email = "gabriel@example.com",
                            LastName = "Almeida",
                            Name = "Gabriel",
                            Phone = "999000111"
                        },
                        new
                        {
                            Id = new Guid("af5f8d39-c972-4e03-bfdb-0d6a8bfe2e70"),
                            CPF = "123.123.123-00",
                            Email = "juliana@example.com",
                            LastName = "Lima",
                            Name = "Juliana",
                            Phone = "123123123"
                        });
                });

            modelBuilder.Entity("ZDZCode.API.Entities.Rent", b =>
                {
                    b.Property<Guid>("HotelId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("PersonId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset>("DepartureDate")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset>("EntryDate")
                        .HasColumnType("datetimeoffset");

                    b.HasKey("HotelId", "PersonId");

                    b.HasIndex("PersonId")
                        .IsUnique();

                    b.ToTable("Rents");

                    b.HasData(
                        new
                        {
                            HotelId = new Guid("b9f5a8b7-719c-4c25-bb6f-89fb34f63376"),
                            PersonId = new Guid("4957ed00-76f0-413c-bfdb-1313a2d7a60f"),
                            DepartureDate = new DateTimeOffset(new DateTime(2024, 6, 5, 20, 30, 25, 573, DateTimeKind.Unspecified).AddTicks(6118), new TimeSpan(0, 0, 0, 0, 0)),
                            EntryDate = new DateTimeOffset(new DateTime(2024, 5, 31, 20, 30, 25, 573, DateTimeKind.Unspecified).AddTicks(6116), new TimeSpan(0, 0, 0, 0, 0))
                        },
                        new
                        {
                            HotelId = new Guid("b50e3174-2aa7-465d-a5ca-45219d85e543"),
                            PersonId = new Guid("165370e7-dddd-4caa-90e0-5945d919e814"),
                            DepartureDate = new DateTimeOffset(new DateTime(2024, 6, 8, 20, 30, 25, 573, DateTimeKind.Unspecified).AddTicks(6140), new TimeSpan(0, 0, 0, 0, 0)),
                            EntryDate = new DateTimeOffset(new DateTime(2024, 6, 3, 20, 30, 25, 573, DateTimeKind.Unspecified).AddTicks(6139), new TimeSpan(0, 0, 0, 0, 0))
                        },
                        new
                        {
                            HotelId = new Guid("8661a44d-78ec-495a-a204-1fa5cb69b1c6"),
                            PersonId = new Guid("27bc7dd8-d17c-4078-a5e1-d981e6aa777f"),
                            DepartureDate = new DateTimeOffset(new DateTime(2024, 6, 6, 20, 30, 25, 573, DateTimeKind.Unspecified).AddTicks(6142), new TimeSpan(0, 0, 0, 0, 0)),
                            EntryDate = new DateTimeOffset(new DateTime(2024, 6, 2, 20, 30, 25, 573, DateTimeKind.Unspecified).AddTicks(6141), new TimeSpan(0, 0, 0, 0, 0))
                        },
                        new
                        {
                            HotelId = new Guid("a4b30340-ef8a-4209-916e-e1f9f7084c3b"),
                            PersonId = new Guid("d17124d0-1c83-4618-aed9-a2c545ef23c1"),
                            DepartureDate = new DateTimeOffset(new DateTime(2024, 6, 7, 20, 30, 25, 573, DateTimeKind.Unspecified).AddTicks(6144), new TimeSpan(0, 0, 0, 0, 0)),
                            EntryDate = new DateTimeOffset(new DateTime(2024, 6, 1, 20, 30, 25, 573, DateTimeKind.Unspecified).AddTicks(6143), new TimeSpan(0, 0, 0, 0, 0))
                        },
                        new
                        {
                            HotelId = new Guid("b9f5a8b7-719c-4c25-bb6f-89fb34f63376"),
                            PersonId = new Guid("b747d5f3-2ad6-4ee6-a108-ec8619cb7edc"),
                            DepartureDate = new DateTimeOffset(new DateTime(2024, 6, 9, 20, 30, 25, 573, DateTimeKind.Unspecified).AddTicks(6146), new TimeSpan(0, 0, 0, 0, 0)),
                            EntryDate = new DateTimeOffset(new DateTime(2024, 6, 4, 20, 30, 25, 573, DateTimeKind.Unspecified).AddTicks(6145), new TimeSpan(0, 0, 0, 0, 0))
                        },
                        new
                        {
                            HotelId = new Guid("b50e3174-2aa7-465d-a5ca-45219d85e543"),
                            PersonId = new Guid("9292ef7a-97f1-4636-86a2-181b3701787c"),
                            DepartureDate = new DateTimeOffset(new DateTime(2024, 6, 11, 20, 30, 25, 573, DateTimeKind.Unspecified).AddTicks(6148), new TimeSpan(0, 0, 0, 0, 0)),
                            EntryDate = new DateTimeOffset(new DateTime(2024, 6, 6, 20, 30, 25, 573, DateTimeKind.Unspecified).AddTicks(6147), new TimeSpan(0, 0, 0, 0, 0))
                        },
                        new
                        {
                            HotelId = new Guid("8661a44d-78ec-495a-a204-1fa5cb69b1c6"),
                            PersonId = new Guid("3fa773f2-cfcf-4ff6-b9f8-7b171e902499"),
                            DepartureDate = new DateTimeOffset(new DateTime(2024, 6, 12, 20, 30, 25, 573, DateTimeKind.Unspecified).AddTicks(6149), new TimeSpan(0, 0, 0, 0, 0)),
                            EntryDate = new DateTimeOffset(new DateTime(2024, 6, 7, 20, 30, 25, 573, DateTimeKind.Unspecified).AddTicks(6149), new TimeSpan(0, 0, 0, 0, 0))
                        },
                        new
                        {
                            HotelId = new Guid("a4b30340-ef8a-4209-916e-e1f9f7084c3b"),
                            PersonId = new Guid("8cba7beb-e86f-4c1a-baa7-586c4d3ce102"),
                            DepartureDate = new DateTimeOffset(new DateTime(2024, 6, 13, 20, 30, 25, 573, DateTimeKind.Unspecified).AddTicks(6151), new TimeSpan(0, 0, 0, 0, 0)),
                            EntryDate = new DateTimeOffset(new DateTime(2024, 6, 8, 20, 30, 25, 573, DateTimeKind.Unspecified).AddTicks(6151), new TimeSpan(0, 0, 0, 0, 0))
                        },
                        new
                        {
                            HotelId = new Guid("b9f5a8b7-719c-4c25-bb6f-89fb34f63376"),
                            PersonId = new Guid("59349c4d-6dab-43d3-a061-ed8491434616"),
                            DepartureDate = new DateTimeOffset(new DateTime(2024, 6, 10, 20, 30, 25, 573, DateTimeKind.Unspecified).AddTicks(6153), new TimeSpan(0, 0, 0, 0, 0)),
                            EntryDate = new DateTimeOffset(new DateTime(2024, 6, 5, 20, 30, 25, 573, DateTimeKind.Unspecified).AddTicks(6152), new TimeSpan(0, 0, 0, 0, 0))
                        },
                        new
                        {
                            HotelId = new Guid("b50e3174-2aa7-465d-a5ca-45219d85e543"),
                            PersonId = new Guid("af5f8d39-c972-4e03-bfdb-0d6a8bfe2e70"),
                            DepartureDate = new DateTimeOffset(new DateTime(2024, 6, 14, 20, 30, 25, 573, DateTimeKind.Unspecified).AddTicks(6155), new TimeSpan(0, 0, 0, 0, 0)),
                            EntryDate = new DateTimeOffset(new DateTime(2024, 6, 9, 20, 30, 25, 573, DateTimeKind.Unspecified).AddTicks(6154), new TimeSpan(0, 0, 0, 0, 0))
                        });
                });

            modelBuilder.Entity("ZDZCode.API.Entities.Rent", b =>
                {
                    b.HasOne("ZDZCode.API.Entities.Hotel", "Hotel")
                        .WithMany("Rents")
                        .HasForeignKey("HotelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ZDZCode.API.Entities.Person", "Person")
                        .WithOne("Rent")
                        .HasForeignKey("ZDZCode.API.Entities.Rent", "PersonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Hotel");

                    b.Navigation("Person");
                });

            modelBuilder.Entity("ZDZCode.API.Entities.Hotel", b =>
                {
                    b.Navigation("Rents");
                });

            modelBuilder.Entity("ZDZCode.API.Entities.Person", b =>
                {
                    b.Navigation("Rent");
                });
#pragma warning restore 612, 618
        }
    }
}
